@JS('redis')
library redis;

import "package:js/js.dart";
import "../_vanilaJs.dart";

 external RedisClient createClient(num port_arg, [String host_arg, ClientOpts options]);
// external RedisClient createClient(String unix_socket, [ClientOpts options]);
// external RedisClient createClient([ClientOpts options]);
 external void print(Error err, dynamic reply);
@JS('MessageHandler')
class MessageHandler{
}

@JS('CommandT')
class CommandT{
}

@JS('ResCallbackT')
class ResCallbackT{
}

@JS('ServerInfo')
class ServerInfo{
 external String get redis_version;
 external List<num> get versions;
}

@JS('ClientOpts')
class ClientOpts{
 external String get parser;
 external bool get return_buffers;
 external bool get detect_buffers;
 external bool get socket_nodelay;
 external bool get socket_keepalive;
 external bool get no_ready_check;
 external bool get enable_offline_queue;
 external num get retry_max_delay;
 external num get connect_timeout;
 external num get max_attempts;
 external String get auth_pass;
 external String get password;
 external String get family;
 external num get command_queue_high_water;
 external num get command_queue_low_water;
}

@JS('RedisClient')
class RedisClient{
 /*  extends NodeJS.EventEmitter */
 external bool get connected;
 external num get retry_delay;
 external num get retry_backoff;
 external List<dynamic> get command_queue;
 external List<dynamic> get offline_queue;
 external ServerInfo get server_info;
 external void end();
 external void unref();
 external bool send_command(String command, List<dynamic> args);
 external bool auth(String password, [ResCallbackT callback]);
 external bool ping([ResCallbackT callback]);
 external bool append(String key, String value, [ResCallbackT callback]);
 external bool bitcount(String key, [ResCallbackT callback]);
// external bool bitcount(String key, num start, num end, [ResCallbackT callback]);
 external bool set(String key, String value, [ResCallbackT callback]);
 external bool get(String key, [ResCallbackT callback]);
 external bool exists(String key, String value, [ResCallbackT callback]);
 external bool publish(String channel, dynamic value);
 external bool subscribe(String channel);
// external bool get(List<dynamic> args, [ResCallbackT callback]);
// external bool get(List<dynamic> args);
// external bool set(List<dynamic> args, [ResCallbackT callback]);
// external bool set(List<dynamic> args);
 external bool setnx(List<dynamic> args, [ResCallbackT callback]);
// external bool setnx(List<dynamic> args);
 external bool setex(List<dynamic> args, [ResCallbackT callback]);
// external bool setex(List<dynamic> args);
// external bool append(List<dynamic> args, [ResCallbackT callback]);
// external bool append(List<dynamic> args);
 external bool strlen(List<dynamic> args, [ResCallbackT callback]);
// external bool strlen(List<dynamic> args);
 external bool del(List<dynamic> args, [ResCallbackT callback]);
// external bool del(List<dynamic> args);
// external bool exists(List<dynamic> args, [ResCallbackT callback]);
// external bool exists(List<dynamic> args);
 external bool setbit(List<dynamic> args, [ResCallbackT callback]);
// external bool setbit(List<dynamic> args);
 external bool getbit(List<dynamic> args, [ResCallbackT callback]);
// external bool getbit(List<dynamic> args);
 external bool setrange(List<dynamic> args, [ResCallbackT callback]);
// external bool setrange(List<dynamic> args);
 external bool getrange(List<dynamic> args, [ResCallbackT callback]);
// external bool getrange(List<dynamic> args);
 external bool substr(List<dynamic> args, [ResCallbackT callback]);
// external bool substr(List<dynamic> args);
 external bool incr(List<dynamic> args, [ResCallbackT callback]);
// external bool incr(List<dynamic> args);
 external bool decr(List<dynamic> args, [ResCallbackT callback]);
// external bool decr(List<dynamic> args);
 external bool mget(List<dynamic> args, [ResCallbackT callback]);
// external bool mget(List<dynamic> args);
 external bool rpush(List<dynamic> args);
 external bool lpush(List<dynamic> args, [ResCallbackT callback]);
// external bool lpush(List<dynamic> args);
 external bool rpushx(List<dynamic> args, [ResCallbackT callback]);
// external bool rpushx(List<dynamic> args);
 external bool lpushx(List<dynamic> args, [ResCallbackT callback]);
// external bool lpushx(List<dynamic> args);
 external bool linsert(List<dynamic> args, [ResCallbackT callback]);
// external bool linsert(List<dynamic> args);
 external bool rpop(List<dynamic> args, [ResCallbackT callback]);
// external bool rpop(List<dynamic> args);
 external bool lpop(List<dynamic> args, [ResCallbackT callback]);
// external bool lpop(List<dynamic> args);
 external bool brpop(List<dynamic> args, [ResCallbackT callback]);
// external bool brpop(List<dynamic> args);
 external bool brpoplpush(List<dynamic> args, [ResCallbackT callback]);
// external bool brpoplpush(List<dynamic> args);
 external bool blpop(List<dynamic> args, [ResCallbackT callback]);
// external bool blpop(List<dynamic> args);
 external bool llen(List<dynamic> args, [ResCallbackT callback]);
// external bool llen(List<dynamic> args);
 external bool lindex(List<dynamic> args, [ResCallbackT callback]);
// external bool lindex(List<dynamic> args);
 external bool lset(List<dynamic> args, [ResCallbackT callback]);
// external bool lset(List<dynamic> args);
 external bool lrange(List<dynamic> args, [ResCallbackT callback]);
// external bool lrange(List<dynamic> args);
 external bool ltrim(List<dynamic> args, [ResCallbackT callback]);
// external bool ltrim(List<dynamic> args);
 external bool lrem(List<dynamic> args, [ResCallbackT callback]);
// external bool lrem(List<dynamic> args);
 external bool rpoplpush(List<dynamic> args, [ResCallbackT callback]);
// external bool rpoplpush(List<dynamic> args);
 external bool sadd(List<dynamic> args, [ResCallbackT callback]);
// external bool sadd(List<dynamic> args);
 external bool srem(List<dynamic> args, [ResCallbackT callback]);
// external bool srem(List<dynamic> args);
 external bool smove(List<dynamic> args, [ResCallbackT callback]);
// external bool smove(List<dynamic> args);
 external bool sismember(List<dynamic> args, [ResCallbackT callback]);
// external bool sismember(List<dynamic> args);
 external bool scard(List<dynamic> args, [ResCallbackT callback]);
// external bool scard(List<dynamic> args);
 external bool spop(List<dynamic> args, [ResCallbackT callback]);
// external bool spop(List<dynamic> args);
 external bool srandmember(List<dynamic> args, [ResCallbackT callback]);
// external bool srandmember(List<dynamic> args);
 external bool sinter(List<dynamic> args, [ResCallbackT callback]);
// external bool sinter(List<dynamic> args);
 external bool sinterstore(List<dynamic> args, [ResCallbackT callback]);
// external bool sinterstore(List<dynamic> args);
 external bool sunion(List<dynamic> args, [ResCallbackT callback]);
// external bool sunion(List<dynamic> args);
 external bool sunionstore(List<dynamic> args, [ResCallbackT callback]);
// external bool sunionstore(List<dynamic> args);
 external bool sdiff(List<dynamic> args, [ResCallbackT callback]);
// external bool sdiff(List<dynamic> args);
 external bool sdiffstore(List<dynamic> args, [ResCallbackT callback]);
// external bool sdiffstore(List<dynamic> args);
 external bool smembers(List<dynamic> args, [ResCallbackT callback]);
// external bool smembers(List<dynamic> args);
 external bool zadd(List<dynamic> args, [ResCallbackT callback]);
// external bool zadd(List<dynamic> args);
 external bool zincrby(List<dynamic> args, [ResCallbackT callback]);
// external bool zincrby(List<dynamic> args);
 external bool zrem(List<dynamic> args, [ResCallbackT callback]);
// external bool zrem(List<dynamic> args);
 external bool zremrangebyscore(List<dynamic> args, [ResCallbackT callback]);
// external bool zremrangebyscore(List<dynamic> args);
 external bool zremrangebyrank(List<dynamic> args, [ResCallbackT callback]);
// external bool zremrangebyrank(List<dynamic> args);
 external bool zunionstore(List<dynamic> args, [ResCallbackT callback]);
// external bool zunionstore(List<dynamic> args);
 external bool zinterstore(List<dynamic> args, [ResCallbackT callback]);
// external bool zinterstore(List<dynamic> args);
 external bool zrange(List<dynamic> args, [ResCallbackT callback]);
// external bool zrange(List<dynamic> args);
 external bool zrangebyscore(List<dynamic> args, [ResCallbackT callback]);
// external bool zrangebyscore(List<dynamic> args);
 external bool zrevrangebyscore(List<dynamic> args, [ResCallbackT callback]);
// external bool zrevrangebyscore(List<dynamic> args);
 external bool zcount(List<dynamic> args, [ResCallbackT callback]);
// external bool zcount(List<dynamic> args);
 external bool zrevrange(List<dynamic> args, [ResCallbackT callback]);
// external bool zrevrange(List<dynamic> args);
 external bool zcard(List<dynamic> args, [ResCallbackT callback]);
// external bool zcard(List<dynamic> args);
 external bool zscore(List<dynamic> args, [ResCallbackT callback]);
// external bool zscore(List<dynamic> args);
 external bool zrank(List<dynamic> args, [ResCallbackT callback]);
// external bool zrank(List<dynamic> args);
 external bool zrevrank(List<dynamic> args, [ResCallbackT callback]);
// external bool zrevrank(List<dynamic> args);
 external bool hset(List<dynamic> args, [ResCallbackT callback]);
// external bool hset(List<dynamic> args);
 external bool hsetnx(List<dynamic> args, [ResCallbackT callback]);
// external bool hsetnx(List<dynamic> args);
 external bool hget(List<dynamic> args, [ResCallbackT callback]);
// external bool hget(List<dynamic> args);
 external bool hmset(List<dynamic> args, [ResCallbackT callback]);
// external bool hmset(String key, dynamic hash, [ResCallbackT callback]);
// external bool hmset(List<dynamic> args);
 external bool hmget(List<dynamic> args, [ResCallbackT callback]);
// external bool hmget(List<dynamic> args);
 external bool hincrby(List<dynamic> args, [ResCallbackT callback]);
// external bool hincrby(List<dynamic> args);
 external bool hdel(List<dynamic> args, [ResCallbackT callback]);
// external bool hdel(List<dynamic> args);
 external bool hlen(List<dynamic> args, [ResCallbackT callback]);
// external bool hlen(List<dynamic> args);
 external bool hkeys(List<dynamic> args, [ResCallbackT callback]);
// external bool hkeys(List<dynamic> args);
 external bool hvals(List<dynamic> args, [ResCallbackT callback]);
// external bool hvals(List<dynamic> args);
 external bool hgetall(List<dynamic> args, [ResCallbackT callback]);
// external bool hgetall(List<dynamic> args);
// external bool hgetall(String key, [ResCallbackT callback]);
 external bool hexists(List<dynamic> args, [ResCallbackT callback]);
// external bool hexists(List<dynamic> args);
 external bool incrby(List<dynamic> args, [ResCallbackT callback]);
// external bool incrby(List<dynamic> args);
 external bool decrby(List<dynamic> args, [ResCallbackT callback]);
// external bool decrby(List<dynamic> args);
 external bool getset(List<dynamic> args, [ResCallbackT callback]);
// external bool getset(List<dynamic> args);
 external bool mset(List<dynamic> args, [ResCallbackT callback]);
// external bool mset(List<dynamic> args);
 external bool msetnx(List<dynamic> args, [ResCallbackT callback]);
// external bool msetnx(List<dynamic> args);
 external bool randomkey(List<dynamic> args, [ResCallbackT callback]);
// external bool randomkey(List<dynamic> args);
 external void select(List<dynamic> args, [ResCallbackT callback]);
// external void select(List<dynamic> args);
 external bool move(List<dynamic> args, [ResCallbackT callback]);
// external bool move(List<dynamic> args);
 external bool rename(List<dynamic> args, [ResCallbackT callback]);
// external bool rename(List<dynamic> args);
 external bool renamenx(List<dynamic> args, [ResCallbackT callback]);
// external bool renamenx(List<dynamic> args);
 external bool expire(List<dynamic> args, [ResCallbackT callback]);
// external bool expire(List<dynamic> args);
 external bool expireat(List<dynamic> args, [ResCallbackT callback]);
// external bool expireat(List<dynamic> args);
 external bool keys(List<dynamic> args, [ResCallbackT callback]);
// external bool keys(List<dynamic> args);
 external bool dbsize(List<dynamic> args, [ResCallbackT callback]);
// external bool dbsize(List<dynamic> args);
// external void auth(List<dynamic> args, [ResCallbackT callback]);
// external void auth(List<dynamic> args);
// external bool ping(List<dynamic> args, [ResCallbackT callback]);
// external bool ping(List<dynamic> args);
 external bool echo(List<dynamic> args, [ResCallbackT callback]);
// external bool echo(List<dynamic> args);
 external bool save(List<dynamic> args, [ResCallbackT callback]);
// external bool save(List<dynamic> args);
 external bool bgsave(List<dynamic> args, [ResCallbackT callback]);
// external bool bgsave(List<dynamic> args);
 external bool bgrewriteaof(List<dynamic> args, [ResCallbackT callback]);
// external bool bgrewriteaof(List<dynamic> args);
 external bool shutdown(List<dynamic> args, [ResCallbackT callback]);
// external bool shutdown(List<dynamic> args);
 external bool lastsave(List<dynamic> args, [ResCallbackT callback]);
// external bool lastsave(List<dynamic> args);
 external bool type(List<dynamic> args, [ResCallbackT callback]);
// external bool type(List<dynamic> args);
 external Multi multi(List<dynamic> args, [ResCallbackT callback]);
// external Multi multi(List<dynamic> args);
 external bool exec(List<dynamic> args, [ResCallbackT callback]);
// external bool exec(List<dynamic> args);
 external bool discard(List<dynamic> args, [ResCallbackT callback]);
// external bool discard(List<dynamic> args);
 external bool sync(List<dynamic> args, [ResCallbackT callback]);
// external bool sync(List<dynamic> args);
 external bool flushdb(List<dynamic> args, [ResCallbackT callback]);
// external bool flushdb(List<dynamic> args);
 external bool flushall(List<dynamic> args, [ResCallbackT callback]);
// external bool flushall(List<dynamic> args);
 external bool sort(List<dynamic> args, [ResCallbackT callback]);
// external bool sort(List<dynamic> args);
 external bool info(List<dynamic> args, [ResCallbackT callback]);
// external bool info(List<dynamic> args);
 external bool monitor(List<dynamic> args, [ResCallbackT callback]);
// external bool monitor(List<dynamic> args);
 external bool ttl(List<dynamic> args, [ResCallbackT callback]);
// external bool ttl(List<dynamic> args);
 external bool persist(List<dynamic> args, [ResCallbackT callback]);
// external bool persist(List<dynamic> args);
 external bool slaveof(List<dynamic> args, [ResCallbackT callback]);
// external bool slaveof(List<dynamic> args);
 external bool debug(List<dynamic> args, [ResCallbackT callback]);
// external bool debug(List<dynamic> args);
 external bool config(List<dynamic> args, [ResCallbackT callback]);
// external bool config(List<dynamic> args);
// external bool subscribe(List<dynamic> args, [ResCallbackT callback]);
// external bool subscribe(List<dynamic> args);
 external bool unsubscribe(List<dynamic> args, [ResCallbackT callback]);
// external bool unsubscribe(List<dynamic> args);
 external bool psubscribe(List<dynamic> args, [ResCallbackT callback]);
// external bool psubscribe(List<dynamic> args);
 external bool punsubscribe(List<dynamic> args, [ResCallbackT callback]);
// external bool punsubscribe(List<dynamic> args);
// external bool publish(List<dynamic> args, [ResCallbackT callback]);
// external bool publish(List<dynamic> args);
 external bool watch(List<dynamic> args, [ResCallbackT callback]);
// external bool watch(List<dynamic> args);
 external bool unwatch(List<dynamic> args, [ResCallbackT callback]);
// external bool unwatch(List<dynamic> args);
 external bool cluster(List<dynamic> args, [ResCallbackT callback]);
// external bool cluster(List<dynamic> args);
 external bool restore(List<dynamic> args, [ResCallbackT callback]);
// external bool restore(List<dynamic> args);
 external bool migrate(List<dynamic> args, [ResCallbackT callback]);
// external bool migrate(List<dynamic> args);
 external bool dump(List<dynamic> args, [ResCallbackT callback]);
// external bool dump(List<dynamic> args);
 external bool object(List<dynamic> args, [ResCallbackT callback]);
// external bool object(List<dynamic> args);
 external bool client(List<dynamic> args, [ResCallbackT callback]);
// external bool client(List<dynamic> args);
 external bool eval(List<dynamic> args, [ResCallbackT callback]);
// external bool eval(List<dynamic> args);
 external bool evalsha(List<dynamic> args, [ResCallbackT callback]);
// external bool evalsha(List<dynamic> args);
 external bool script(List<dynamic> args, [ResCallbackT callback]);
// external bool script(List<dynamic> args);
// external bool script(String key, [ResCallbackT callback]);
 external bool quit(List<dynamic> args, [ResCallbackT callback]);
// external bool quit(List<dynamic> args);
 external bool scan(List<dynamic> args);
// external bool scan(List<dynamic> args, [ResCallbackT callback]);
 external bool hscan(List<dynamic> args);
// external bool hscan(List<dynamic> args, [ResCallbackT callback]);
 external bool zscan(List<dynamic> args);
// external bool zscan(List<dynamic> args, [ResCallbackT callback]);
}

@JS('Multi')
class Multi{
 external bool exec([ResCallbackT callback]);
 external Multi get(List<dynamic> args, [ResCallbackT callback]);
// external Multi get(List<dynamic> args);
 external Multi set(List<dynamic> args, [ResCallbackT callback]);
// external Multi set(List<dynamic> args);
 external Multi setnx(List<dynamic> args, [ResCallbackT callback]);
// external Multi setnx(List<dynamic> args);
 external Multi setex(List<dynamic> args, [ResCallbackT callback]);
// external Multi setex(List<dynamic> args);
 external Multi append(List<dynamic> args, [ResCallbackT callback]);
// external Multi append(List<dynamic> args);
 external Multi strlen(List<dynamic> args, [ResCallbackT callback]);
// external Multi strlen(List<dynamic> args);
 external Multi del(List<dynamic> args, [ResCallbackT callback]);
// external Multi del(List<dynamic> args);
 external Multi exists(List<dynamic> args, [ResCallbackT callback]);
// external Multi exists(List<dynamic> args);
 external Multi setbit(List<dynamic> args, [ResCallbackT callback]);
// external Multi setbit(List<dynamic> args);
 external Multi getbit(List<dynamic> args, [ResCallbackT callback]);
// external Multi getbit(List<dynamic> args);
 external Multi setrange(List<dynamic> args, [ResCallbackT callback]);
// external Multi setrange(List<dynamic> args);
 external Multi getrange(List<dynamic> args, [ResCallbackT callback]);
// external Multi getrange(List<dynamic> args);
 external Multi substr(List<dynamic> args, [ResCallbackT callback]);
// external Multi substr(List<dynamic> args);
 external Multi incr(List<dynamic> args, [ResCallbackT callback]);
// external Multi incr(List<dynamic> args);
 external Multi decr(List<dynamic> args, [ResCallbackT callback]);
// external Multi decr(List<dynamic> args);
 external Multi mget(List<dynamic> args, [ResCallbackT callback]);
// external Multi mget(List<dynamic> args);
 external Multi rpush(List<dynamic> args);
 external Multi lpush(List<dynamic> args, [ResCallbackT callback]);
// external Multi lpush(List<dynamic> args);
 external Multi rpushx(List<dynamic> args, [ResCallbackT callback]);
// external Multi rpushx(List<dynamic> args);
 external Multi lpushx(List<dynamic> args, [ResCallbackT callback]);
// external Multi lpushx(List<dynamic> args);
 external Multi linsert(List<dynamic> args, [ResCallbackT callback]);
// external Multi linsert(List<dynamic> args);
 external Multi rpop(List<dynamic> args, [ResCallbackT callback]);
// external Multi rpop(List<dynamic> args);
 external Multi lpop(List<dynamic> args, [ResCallbackT callback]);
// external Multi lpop(List<dynamic> args);
 external Multi brpop(List<dynamic> args, [ResCallbackT callback]);
// external Multi brpop(List<dynamic> args);
 external Multi brpoplpush(List<dynamic> args, [ResCallbackT callback]);
// external Multi brpoplpush(List<dynamic> args);
 external Multi blpop(List<dynamic> args, [ResCallbackT callback]);
// external Multi blpop(List<dynamic> args);
 external Multi llen(List<dynamic> args, [ResCallbackT callback]);
// external Multi llen(List<dynamic> args);
 external Multi lindex(List<dynamic> args, [ResCallbackT callback]);
// external Multi lindex(List<dynamic> args);
 external Multi lset(List<dynamic> args, [ResCallbackT callback]);
// external Multi lset(List<dynamic> args);
 external Multi lrange(List<dynamic> args, [ResCallbackT callback]);
// external Multi lrange(List<dynamic> args);
 external Multi ltrim(List<dynamic> args, [ResCallbackT callback]);
// external Multi ltrim(List<dynamic> args);
 external Multi lrem(List<dynamic> args, [ResCallbackT callback]);
// external Multi lrem(List<dynamic> args);
 external Multi rpoplpush(List<dynamic> args, [ResCallbackT callback]);
// external Multi rpoplpush(List<dynamic> args);
 external Multi sadd(List<dynamic> args, [ResCallbackT callback]);
// external Multi sadd(List<dynamic> args);
 external Multi srem(List<dynamic> args, [ResCallbackT callback]);
// external Multi srem(List<dynamic> args);
 external Multi smove(List<dynamic> args, [ResCallbackT callback]);
// external Multi smove(List<dynamic> args);
 external Multi sismember(List<dynamic> args, [ResCallbackT callback]);
// external Multi sismember(List<dynamic> args);
 external Multi scard(List<dynamic> args, [ResCallbackT callback]);
// external Multi scard(List<dynamic> args);
 external Multi spop(List<dynamic> args, [ResCallbackT callback]);
// external Multi spop(List<dynamic> args);
 external Multi srandmember(List<dynamic> args, [ResCallbackT callback]);
// external Multi srandmember(List<dynamic> args);
 external Multi sinter(List<dynamic> args, [ResCallbackT callback]);
// external Multi sinter(List<dynamic> args);
 external Multi sinterstore(List<dynamic> args, [ResCallbackT callback]);
// external Multi sinterstore(List<dynamic> args);
 external Multi sunion(List<dynamic> args, [ResCallbackT callback]);
// external Multi sunion(List<dynamic> args);
 external Multi sunionstore(List<dynamic> args, [ResCallbackT callback]);
// external Multi sunionstore(List<dynamic> args);
 external Multi sdiff(List<dynamic> args, [ResCallbackT callback]);
// external Multi sdiff(List<dynamic> args);
 external Multi sdiffstore(List<dynamic> args, [ResCallbackT callback]);
// external Multi sdiffstore(List<dynamic> args);
 external Multi smembers(List<dynamic> args, [ResCallbackT callback]);
// external Multi smembers(List<dynamic> args);
 external Multi zadd(List<dynamic> args, [ResCallbackT callback]);
// external Multi zadd(List<dynamic> args);
 external Multi zincrby(List<dynamic> args, [ResCallbackT callback]);
// external Multi zincrby(List<dynamic> args);
 external Multi zrem(List<dynamic> args, [ResCallbackT callback]);
// external Multi zrem(List<dynamic> args);
 external Multi zremrangebyscore(List<dynamic> args, [ResCallbackT callback]);
// external Multi zremrangebyscore(List<dynamic> args);
 external Multi zremrangebyrank(List<dynamic> args, [ResCallbackT callback]);
// external Multi zremrangebyrank(List<dynamic> args);
 external Multi zunionstore(List<dynamic> args, [ResCallbackT callback]);
// external Multi zunionstore(List<dynamic> args);
 external Multi zinterstore(List<dynamic> args, [ResCallbackT callback]);
// external Multi zinterstore(List<dynamic> args);
 external Multi zrange(List<dynamic> args, [ResCallbackT callback]);
// external Multi zrange(List<dynamic> args);
 external Multi zrangebyscore(List<dynamic> args, [ResCallbackT callback]);
// external Multi zrangebyscore(List<dynamic> args);
 external Multi zrevrangebyscore(List<dynamic> args, [ResCallbackT callback]);
// external Multi zrevrangebyscore(List<dynamic> args);
 external Multi zcount(List<dynamic> args, [ResCallbackT callback]);
// external Multi zcount(List<dynamic> args);
 external Multi zrevrange(List<dynamic> args, [ResCallbackT callback]);
// external Multi zrevrange(List<dynamic> args);
 external Multi zcard(List<dynamic> args, [ResCallbackT callback]);
// external Multi zcard(List<dynamic> args);
 external Multi zscore(List<dynamic> args, [ResCallbackT callback]);
// external Multi zscore(List<dynamic> args);
 external Multi zrank(List<dynamic> args, [ResCallbackT callback]);
// external Multi zrank(List<dynamic> args);
 external Multi zrevrank(List<dynamic> args, [ResCallbackT callback]);
// external Multi zrevrank(List<dynamic> args);
 external Multi hset(List<dynamic> args, [ResCallbackT callback]);
// external Multi hset(List<dynamic> args);
 external Multi hsetnx(List<dynamic> args, [ResCallbackT callback]);
// external Multi hsetnx(List<dynamic> args);
 external Multi hget(List<dynamic> args, [ResCallbackT callback]);
// external Multi hget(List<dynamic> args);
 external Multi hmset(List<dynamic> args, [ResCallbackT callback]);
// external Multi hmset(String key, dynamic hash, [ResCallbackT callback]);
// external Multi hmset(List<dynamic> args);
 external Multi hmget(List<dynamic> args, [ResCallbackT callback]);
// external Multi hmget(List<dynamic> args);
 external Multi hincrby(List<dynamic> args, [ResCallbackT callback]);
// external Multi hincrby(List<dynamic> args);
 external Multi hdel(List<dynamic> args, [ResCallbackT callback]);
// external Multi hdel(List<dynamic> args);
 external Multi hlen(List<dynamic> args, [ResCallbackT callback]);
// external Multi hlen(List<dynamic> args);
 external Multi hkeys(List<dynamic> args, [ResCallbackT callback]);
// external Multi hkeys(List<dynamic> args);
 external Multi hvals(List<dynamic> args, [ResCallbackT callback]);
// external Multi hvals(List<dynamic> args);
 external Multi hgetall(List<dynamic> args, [ResCallbackT callback]);
// external Multi hgetall(List<dynamic> args);
// external Multi hgetall(String key, [ResCallbackT callback]);
 external Multi hexists(List<dynamic> args, [ResCallbackT callback]);
// external Multi hexists(List<dynamic> args);
 external Multi incrby(List<dynamic> args, [ResCallbackT callback]);
// external Multi incrby(List<dynamic> args);
 external Multi decrby(List<dynamic> args, [ResCallbackT callback]);
// external Multi decrby(List<dynamic> args);
 external Multi getset(List<dynamic> args, [ResCallbackT callback]);
// external Multi getset(List<dynamic> args);
 external Multi mset(List<dynamic> args, [ResCallbackT callback]);
// external Multi mset(List<dynamic> args);
 external Multi msetnx(List<dynamic> args, [ResCallbackT callback]);
// external Multi msetnx(List<dynamic> args);
 external Multi randomkey(List<dynamic> args, [ResCallbackT callback]);
// external Multi randomkey(List<dynamic> args);
 external void select(List<dynamic> args, [ResCallbackT callback]);
// external Multi select(List<dynamic> args);
 external Multi move(List<dynamic> args, [ResCallbackT callback]);
// external Multi move(List<dynamic> args);
 external Multi rename(List<dynamic> args, [ResCallbackT callback]);
// external Multi rename(List<dynamic> args);
 external Multi renamenx(List<dynamic> args, [ResCallbackT callback]);
// external Multi renamenx(List<dynamic> args);
 external Multi expire(List<dynamic> args, [ResCallbackT callback]);
// external Multi expire(List<dynamic> args);
 external Multi expireat(List<dynamic> args, [ResCallbackT callback]);
// external Multi expireat(List<dynamic> args);
 external Multi keys(List<dynamic> args, [ResCallbackT callback]);
// external Multi keys(List<dynamic> args);
 external Multi dbsize(List<dynamic> args, [ResCallbackT callback]);
// external Multi dbsize(List<dynamic> args);
 external void auth(List<dynamic> args, [ResCallbackT callback]);
// external void auth(List<dynamic> args);
 external Multi ping(List<dynamic> args, [ResCallbackT callback]);
// external Multi ping(List<dynamic> args);
 external Multi echo(List<dynamic> args, [ResCallbackT callback]);
// external Multi echo(List<dynamic> args);
 external Multi save(List<dynamic> args, [ResCallbackT callback]);
// external Multi save(List<dynamic> args);
 external Multi bgsave(List<dynamic> args, [ResCallbackT callback]);
// external Multi bgsave(List<dynamic> args);
 external Multi bgrewriteaof(List<dynamic> args, [ResCallbackT callback]);
// external Multi bgrewriteaof(List<dynamic> args);
 external Multi shutdown(List<dynamic> args, [ResCallbackT callback]);
// external Multi shutdown(List<dynamic> args);
 external Multi lastsave(List<dynamic> args, [ResCallbackT callback]);
// external Multi lastsave(List<dynamic> args);
 external Multi type(List<dynamic> args, [ResCallbackT callback]);
// external Multi type(List<dynamic> args);
 external Multi multi(List<dynamic> args, [ResCallbackT callback]);
// external Multi multi(List<dynamic> args);
// external Multi exec(List<dynamic> args, [ResCallbackT callback]);
// external Multi exec(List<dynamic> args);
 external Multi discard(List<dynamic> args, [ResCallbackT callback]);
// external Multi discard(List<dynamic> args);
 external Multi sync(List<dynamic> args, [ResCallbackT callback]);
// external Multi sync(List<dynamic> args);
 external Multi flushdb(List<dynamic> args, [ResCallbackT callback]);
// external Multi flushdb(List<dynamic> args);
 external Multi flushall(List<dynamic> args, [ResCallbackT callback]);
// external Multi flushall(List<dynamic> args);
 external Multi sort(List<dynamic> args, [ResCallbackT callback]);
// external Multi sort(List<dynamic> args);
 external Multi info(List<dynamic> args, [ResCallbackT callback]);
// external Multi info(List<dynamic> args);
 external Multi monitor(List<dynamic> args, [ResCallbackT callback]);
// external Multi monitor(List<dynamic> args);
 external Multi ttl(List<dynamic> args, [ResCallbackT callback]);
// external Multi ttl(List<dynamic> args);
 external Multi persist(List<dynamic> args, [ResCallbackT callback]);
// external Multi persist(List<dynamic> args);
 external Multi slaveof(List<dynamic> args, [ResCallbackT callback]);
// external Multi slaveof(List<dynamic> args);
 external Multi debug(List<dynamic> args, [ResCallbackT callback]);
// external Multi debug(List<dynamic> args);
 external Multi config(List<dynamic> args, [ResCallbackT callback]);
// external Multi config(List<dynamic> args);
 external Multi subscribe(List<dynamic> args, [ResCallbackT callback]);
// external Multi subscribe(List<dynamic> args);
 external Multi unsubscribe(List<dynamic> args, [ResCallbackT callback]);
// external Multi unsubscribe(List<dynamic> args);
 external Multi psubscribe(List<dynamic> args, [ResCallbackT callback]);
// external Multi psubscribe(List<dynamic> args);
 external Multi punsubscribe(List<dynamic> args, [ResCallbackT callback]);
// external Multi punsubscribe(List<dynamic> args);
 external Multi publish(List<dynamic> args, [ResCallbackT callback]);
// external Multi publish(List<dynamic> args);
 external Multi watch(List<dynamic> args, [ResCallbackT callback]);
// external Multi watch(List<dynamic> args);
 external Multi unwatch(List<dynamic> args, [ResCallbackT callback]);
// external Multi unwatch(List<dynamic> args);
 external Multi cluster(List<dynamic> args, [ResCallbackT callback]);
// external Multi cluster(List<dynamic> args);
 external Multi restore(List<dynamic> args, [ResCallbackT callback]);
// external Multi restore(List<dynamic> args);
 external Multi migrate(List<dynamic> args, [ResCallbackT callback]);
// external Multi migrate(List<dynamic> args);
 external Multi dump(List<dynamic> args, [ResCallbackT callback]);
// external Multi dump(List<dynamic> args);
 external Multi object(List<dynamic> args, [ResCallbackT callback]);
// external Multi object(List<dynamic> args);
 external Multi client(List<dynamic> args, [ResCallbackT callback]);
// external Multi client(List<dynamic> args);
 external Multi eval(List<dynamic> args, [ResCallbackT callback]);
// external Multi eval(List<dynamic> args);
 external Multi evalsha(List<dynamic> args, [ResCallbackT callback]);
// external Multi evalsha(List<dynamic> args);
 external Multi quit(List<dynamic> args, [ResCallbackT callback]);
// external Multi quit(List<dynamic> args);
 external Multi scan(List<dynamic> args);
// external Multi scan(List<dynamic> args, [ResCallbackT callback]);
 external Multi hscan(List<dynamic> args);
// external Multi hscan(List<dynamic> args, [ResCallbackT callback]);
 external Multi zscan(List<dynamic> args);
// external Multi zscan(List<dynamic> args, [ResCallbackT callback]);
}

